#upstream upstream_${PRIMARY_DOMAIN} {
#  least_conn;
#  keepalive 128;
#  zone ${PRIMARY_DOMAIN}_upstream 1m;
#  server serv1:1234 fail_timeout=10s max_fails=3 weight=5 backup down;
#  jdomain upstream.domain port=8008 max_ips=8 interval=10;
#}

#proxy_cache_path ${NGINX_CACHE_PATH}/$PRIMARY_DOMAIN levels=1:2 keys_zone=$PRIMARY_DOMAIN:10m;
#proxy_cache_methods GET HEAD;
#limit_req_zone $binary_remote_addr zone=limit_${PRIMARY_DOMAIN}:10m rate=10r/s;
#limit_req_status 429;

server {
  ##################################################
  # Server Name - NOTE - if www is going to be present, it should be the second 
  # name, example:
  # server_name google.com www.google.com;
  ##################################################
  set $primary_domain             $PRIMARY_DOMAIN;
  set $upstream_name              upstream_${PRIMARY_DOMAIN};
  server_name                     $ALL_DOMAINS;
  listen                          80;
  listen                          [::]:80;

  #listen                         443 ssl;
  #listen                         [::]:443 ssl;
  #ssl_certificate                /etc/nginx/certs/$server_name.crt;
  #ssl_certificate_key            /etc/nginx/certs/$server_name.key;
  #ssl_stapling                   on;
  #ssl_stapling_verify            on;
  #ssl_trusted_certificate        /etc/nginx/certs/$server_name_ca.crt;
  #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
  
  access_log                      /var/log/nginx/$server_name/access.log main;
  error_log                       /var/log/nginx/$PRIMARY_DOMAIN/error.log;
  root                            /webroot/$server_name;

  ###################################################
  # Rate limiting
  ###################################################
  # Sets rate limit, burst - Upto x req/s burts mode and delay is cause a delay after the x requests
  #limit_req zone=limit_${PRIMARY_DOMAIN} burst=20 delay=15; # nodelay if delay need not be set

  # Few redirects
  ###################################################
  # redirect WWW to without www
  ###################################################
  #if ($host ~ ^www\.) {
  #   return 301 https://$primary_domain$request_uri;
  #}
  ###################################################
  # Redirect HTTP to HTTPS
  ###################################################
  #if ($scheme = http) {
  #  return 301 https://$server_name$request_uri;
  #}

  ###################################################
  # Include few items
  ###################################################
  include /etc/nginx/conf.d/defaults/security-headers.conf;
  include /etc/nginx/conf.d/defaults/vts.conf;
  include /etc/nginx/conf.d/defaults/proxy.conf;
  #proxy_cache $PRIMARY_DOMAIN;

  ###################################################
  # Mod Security
  ###################################################
  modsecurity off;
  modsecurity_rules_file /etc/nginx/conf.d/defaults/modsecurity/modsecurity-includes.conf;

  ########################################
  # Serve
  ########################################
  include /etc/nginx/conf.d/defaults/error-pages.conf;
  include /etc/nginx/conf.d/defaults/deny-dotfiles.conf;
  #include /etc/nginx/conf.d/defaults/cache-static.conf;

  # set default locations. Comment them if you do not want to use them
  include /etc/nginx/conf.d/fancy-index-flat.conf;
  #include /etc/nginx/conf.d/defaults/location-healthz.conf;
  #include /etc/nginx/conf.d/defaults/location-ping.conf;
  #include /etc/nginx/conf.d/defaults/location-faveicon.conf;
  
  # Add Any other routes here
  
  location / {
    root /webroot/$server_name;
    index index.html index.htm;
    try_files \$uri \$uri/ =404;
    # Proxy PASS FTW
    #proxy_pass http://$upstream_name;
    # Caching
    #proxy_cache_valid    any  3m;
    #proxy_cache_min_uses 3;
  }
}
