proxy_redirect              off;
proxy_set_header            Host                  $host;    
proxy_set_header            Proxy                 "";
proxy_set_header            Upgrade               $http_upgrade;
proxy_set_header            Connection            'upgrade';
proxy_set_header            X-Real-IP             $remote_addr;
proxy_set_header            X-Forwarded-For       $proxy_add_x_forwarded_for;
proxy_set_header            X-Forwarded-Port      $server_port;
proxy_set_header            X-Forwarded-Proto     $scheme;
proxy_set_header            X-GEO-CONTINENT-CODE  $geoip_continent_code;
proxy_set_header            X-GEO-CONTINENT-NAME  $geoip_continent_name;
proxy_set_header            X-GEO-COUNTRY-CODE    $geoip_country_code;
proxy_set_header            X-GEO-COUNTRY-NAME    $geoip_country_name;
proxy_set_header            X-GEO-TIMEZONE        $geoip_timezone;
proxy_set_header            X-GEO-STATE-CODE      $geoip_state_code;
proxy_set_header            X-GEO-STATE-NAME      $geoip_state_name;
proxy_set_header            X-GEO-CITY            $geoip_city_name;
proxy_set_header            X-GEO-LATITUDE        $geoip_lat;
proxy_set_header            X-GEO-LONGITUDE       $geoip_long;
proxy_set_header            X-GEO-LATLONG-RADIUS  $geoip_latlong_radius;
proxy_http_version          1.1;
proxy_connect_timeout       90;
proxy_send_timeout          90;
proxy_read_timeout          90;
#proxy_buffering            off;
proxy_buffers               32 4k;
proxy_pass_header           Authorization;

# Pass the global request id to the backend
proxy_set_header            X-Request-ID          $request_id;

map $site_cache $site_cache_zone {
  default 'off';
  # If value exists use it
  1 "cache_$site_name";
}

map $site_cache_expire $site_cache_expire_seconds {
  default 1800;
  # If it is just numbers, use it as seconds
  ~^[0-9]+$ $site_cache_expire;
  # If it number and ends with m, convert to seconds
  ~^([0-9]+)m$ $1 * 60;
  # If it number and ends with h, convert to seconds
  ~^([0-9]+)h$ $1 * 60 * 60;
  # If it number and ends with d, convert to seconds
  ~^([0-9]+)d$ $1 * 60 * 60 * 24;
}

proxy_cache                 $site_cache_zone;
proxy_cache_valid           200                   $site_cache_expire;
proxy_cache_valid           404                   1m;
proxy_cache_key             $site_cache_key_prefix;
# Bypass cache if needed
proxy_cache_bypass          $site_cache_bypass;
# Cache headers to control client-side caching
if ($site_cache_zone != 'off') {
  add_header                  X-Proxy-Cache         $upstream_cache_status;
  add_header                  Cache-Control         "public, max-age=$cache_client_expire";
}

# Use the dynamic upstream name set by each site config
proxy_pass http://$site_upstream;